// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  name          String
  email         String         @unique
  password      String
  role          Role          @default(TECHNICIAN)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  serviceOrders ServiceOrder[]
}

model Customer {
  id            String         @id @default(cuid())
  name          String
  email         String?
  phone         String
  address       String?
  cpf           String?       @unique
  cnpj          String?       @unique
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  serviceOrders ServiceOrder[]
}

model ServiceOrder {
  id          String        @id @default(cuid())
  number      Int          @unique @default(autoincrement())
  status      OrderStatus  @default(PENDING)
  description String
  diagnosis   String?
  solution    String?
  totalCost   Decimal      @default(0)
  customerId  String
  technicianId String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  customer    Customer     @relation(fields: [customerId], references: [id])
  technician  User        @relation(fields: [technicianId], references: [id])
  products    ProductOnOrder[]
  services    ServiceOnOrder[]
}

model Product {
  id          String        @id @default(cuid())
  name        String
  description String?
  price       Decimal
  stock       Int          @default(0)
  minStock    Int          @default(5)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  orders      ProductOnOrder[]
}

model Service {
  id          String        @id @default(cuid())
  name        String
  description String?
  price       Decimal
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  orders      ServiceOnOrder[]
}

model ProductOnOrder {
  id            String      @id @default(cuid())
  quantity      Int
  price         Decimal
  serviceOrder  ServiceOrder @relation(fields: [serviceOrderId], references: [id])
  product       Product     @relation(fields: [productId], references: [id])
  serviceOrderId String
  productId     String
}

model ServiceOnOrder {
  id            String      @id @default(cuid())
  price         Decimal
  serviceOrder  ServiceOrder @relation(fields: [serviceOrderId], references: [id])
  service       Service     @relation(fields: [serviceId], references: [id])
  serviceOrderId String
  serviceId     String
}

enum Role {
  ADMIN
  TECHNICIAN
}

enum OrderStatus {
  PENDING
  IN_PROGRESS
  WAITING_PARTS
  COMPLETED
  CANCELLED
} 